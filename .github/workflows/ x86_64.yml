# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

  
on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 0 20 * * *

jobs:

  build_openwrt:

    name: Build x86_64OpenWrt Firmware

    runs-on: ubuntu-latest

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* moby* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

           - name: Clone source code
           env:
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
           run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

      - name: add custom source
        run: |
          cd openwrt
          sed -i "/helloworld/d" "feeds.conf.default"
          echo "src-git helloworld https://github.com/fw876/helloworld.git" >> "feeds.conf.default"

      - name: Update & install feeds
        run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a

      - name: Load custom configuration
        env:
          CONFIG_FILE: "x86_64.config"
          DIY_SH: "diy.sh"
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_SH
          cd openwrt
          echo 'CONFIG_KERNEL_BUILD_USER="chensir"' >> ./.config
          echo "CONFIG_GRUB_TITLE=\"OpenWrt AutoBuild by chensir-$Date_and_RunNumber\"" >> ./.config
          echo "OpenWrt AutoBuild by chensir - $Date_and_RunNumber" >> package/base-files/files/etc/banner
          ../$DIY_SH
          make defconfig

      # - name: SSH connection to Actions
      #   uses: P3TERX/debugger-action@master

      - name: Download package
        run: |
          cd openwrt && make download -j$(($(nproc)+1))
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Multi-thread compile
        run: |
          cd openwrt
          echo -e "$(($(nproc)+1)) thread compile"
          make -j$(($(nproc)+1))

      - name: Single-thread compile
        if: failure()
        run: |
          cd openwrt
          make -j1 V=s

      - name: Upload bin directory
        uses: actions/upload-artifact@main
        if: always()
        with:
          name: OpenWrt_x86_64_bin-${{ env.Date_and_RunNumber }}
          path: openwrt/bin

      - name: Remove packages
        if: always()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "Firmware_path=$(pwd)" >> $GITHUB_ENV
          
          
      - name: Upload firmware to Artifact
        uses: actions/upload-artifact@main
        if: always()
        with:
          name: OpenWrt-x86_64-Firmware-${{ env.Date_and_RunNumber }}
          path: ${{ env.Firmware_path }}

      - name: Publish release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: openwrt/bin/targets/ramips/mt7621/*
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASES_DEPLOY_TOKEN }}
